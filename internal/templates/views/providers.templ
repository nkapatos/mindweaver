package views

import (
	"strconv"

	"github.com/nkapatos/mindweaver/internal/store"
	"github.com/nkapatos/mindweaver/internal/templates/layouts"
)

templ ProvidersPage(providers []store.Provider, editingProvider *store.Provider, providerModels []store.Model, activePath string) {
	@layouts.AppLayout("Mindweaver - Providers", "Manage your AI providers", activePath) {
		<div class="container mx-auto px-4 py-8">
			<div class="mb-8">
				<h1 class="text-3xl font-bold text-base-content mb-2">Providers</h1>
				<p class="text-base-content/70">Configure and manage your AI providers and models.</p>
			</div>
			<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
				<!-- Create/Edit Provider Form -->
				<div class="card bg-base-100 shadow-lg">
					<div class="card-body">
						if editingProvider != nil {
							<div class="flex items-center gap-4 mb-4">
								<h2 class="card-title text-xl">Edit Provider</h2>
								<a href="/providers" class="btn btn-ghost btn-sm">
									‚Üê Back to Create
								</a>
							</div>
							<form action={ templ.SafeURL("/providers/edit/" + strconv.FormatInt(editingProvider.ID, 10)) } method="POST" class="space-y-4">
								<div>
									<label class="label" for="name">
										<span class="label-text font-medium">Provider Name</span>
									</label>
									<input
										type="text"
										id="name"
										name="name"
										class="input input-bordered w-full"
										placeholder="e.g., openai, anthropic, local"
										value={ editingProvider.Name }
										required
									/>
								</div>
								<div>
									<label class="label" for="type">
										<span class="label-text font-medium">Provider Type</span>
									</label>
									<select id="type" name="type" class="select select-bordered w-full" required>
										<option
											value="llm"
											if editingProvider.Type == "llm" {
												selected
											}
										>LLM</option>
										<option
											value="embedding"
											if editingProvider.Type == "embedding" {
												selected
											}
										>Embedding</option>
										<option
											value="image"
											if editingProvider.Type == "image" {
												selected
											}
										>Image Generation</option>
									</select>
								</div>
								<label class="label cursor-pointer">
									<span class="label-text font-medium">Active</span>
									<input
										type="checkbox"
										id="is_active"
										name="is_active"
										class="checkbox checkbox-primary"
										value="1"
										if editingProvider.IsActive.Valid && editingProvider.IsActive.Bool {
											checked
										}
									/>
								</label>
								<label class="label">
									<span class="label-text-alt text-base-content/60">
										Only active providers are available for use
									</span>
								</label>
								<div class="flex gap-3">
									<a href="/providers" class="btn btn-outline flex-1">
										Cancel
									</a>
									<button type="submit" class="btn btn-primary flex-1">
										Update Provider
									</button>
								</div>
							</form>
						} else {
							<h2 class="card-title text-xl mb-4">Create New Provider</h2>
							<form action="/providers" method="POST" class="space-y-4">
								<div>
									<label class="label" for="name">
										<span class="label-text font-medium">Provider Name</span>
									</label>
									<input
										type="text"
										id="name"
										name="name"
										class="input input-bordered w-full"
										placeholder="e.g., openai, anthropic, local"
										required
									/>
								</div>
								<div>
									<label class="label" for="type">
										<span class="label-text font-medium">Provider Type</span>
									</label>
									<select id="type" name="type" class="select select-bordered w-full" required>
										<option value="">Select provider type</option>
										<option value="llm">LLM</option>
										<option value="embedding">Embedding</option>
										<option value="image">Image Generation</option>
									</select>
								</div>
								<label class="label cursor-pointer">
									<span class="label-text font-medium">Active</span>
									<input
										type="checkbox"
										id="is_active"
										name="is_active"
										class="checkbox checkbox-primary"
										value="1"
										checked
									/>
								</label>
								<label class="label">
									<span class="label-text-alt text-base-content/60">
										Only active providers are available for use
									</span>
								</label>
								<button type="submit" class="btn btn-primary w-full">
									Create Provider
								</button>
							</form>
						}
					</div>
				</div>
				<!-- Existing Providers List -->
				<div class="card bg-base-100 shadow-lg">
					<div class="card-body">
						<h2 class="card-title text-xl mb-4">Your Providers</h2>
						if len(providers) == 0 {
							<div class="text-center py-8">
								<p class="text-base-content/60">No providers configured yet. Create your first provider using the form.</p>
							</div>
						} else {
							<div class="space-y-4">
								for _, provider := range providers {
									<div class="border border-base-300 rounded-lg p-4">
										<div class="flex justify-between items-start mb-2">
											<div>
												<h3 class="font-semibold text-lg">{ provider.Name }</h3>
												<span class="badge badge-secondary badge-sm">{ provider.Type }</span>
											</div>
											if provider.IsActive.Valid && provider.IsActive.Bool {
												<span class="badge badge-success badge-sm">Active</span>
											} else {
												<span class="badge badge-neutral badge-sm">Inactive</span>
											}
										</div>
										<div class="flex justify-between items-center text-xs text-base-content/50 mb-3">
											<span>ID: { strconv.FormatInt(provider.ID, 10) }</span>
											if provider.CreatedAt.Valid {
												<span>Created: { provider.CreatedAt.Time.Format("2006-01-02 15:04:05") }</span>
											}
										</div>
										<div class="mt-3 flex gap-2">
											<a href={ templ.SafeURL("/providers/edit/" + strconv.FormatInt(provider.ID, 10)) } class="btn btn-sm btn-outline">
												Edit
											</a>
											<a href={ templ.SafeURL("/providers/" + strconv.FormatInt(provider.ID, 10) + "/settings") } class="btn btn-sm btn-outline">
												Settings
											</a>
											<a href={ templ.SafeURL("/providers/" + strconv.FormatInt(provider.ID, 10) + "/models") } class="btn btn-sm btn-outline">
												Models
											</a>
											<form action="/providers/delete" method="POST" class="inline" onsubmit="return confirm('Are you sure you want to delete this provider? This will also delete all associated settings and models.')">
												<input type="hidden" name="id" value={ strconv.FormatInt(provider.ID, 10) }/>
												<button type="submit" class="btn btn-sm btn-error">
													Delete
												</button>
											</form>
										</div>
									</div>
								}
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	}
}
