package views

import "github.com/nkapatos/mindweaver/internal/templates/layouts"

templ Conversation(activePath string) {
	@layouts.AppLayout("Conversation", "Chat with your AI assistant", activePath) {
		<div class="flex flex-col h-screen bg-base-200">
			<!-- Chat Header -->
			<div class="bg-base-100 border-b border-base-300 px-6 py-4">
				<div class="flex items-center justify-between">
					<div class="flex items-center gap-3">
						<div class="avatar">
							<div class="w-10 h-10 rounded-full bg-primary">
								<span class="text-primary-content font-semibold text-lg">AI</span>
							</div>
						</div>
						<div>
							<h1 class="text-lg font-semibold text-base-content">AI Assistant</h1>
							<p class="text-sm text-base-content/60">Ready to help you</p>
						</div>
					</div>
					<div class="flex items-center gap-2">
						<button class="btn btn-ghost btn-sm">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
							</svg>
						</button>
					</div>
				</div>
			</div>

			<div class="flex-1 overflow-y-auto p-6 space-y-4" id="messages-container">
				<!-- Welcome Message -->
				<div class="chat chat-start">
					<div class="chat-image avatar">
						<div class="w-10 h-10 rounded-full bg-primary">
							<span class="text-primary-content font-semibold">AI</span>
						</div>
					</div>
					<div class="chat-header text-sm opacity-70 mb-1">
						AI Assistant
						<time class="text-xs opacity-50 ml-2">Just now</time>
					</div>
					<div class="chat-bubble chat-bubble-primary">
						Hello! I'm your AI assistant. How can I help you today? Feel free to ask me anything - I'm here to assist with your questions and tasks.
					</div>
				</div>

				<!-- User Message Example -->
				<div class="chat chat-end">
					<div class="chat-header text-sm opacity-70 mb-1">
						<time class="text-xs opacity-50 mr-2">Just now</time>
						You
					</div>
					<div class="chat-bubble chat-bubble-neutral">
						Hi! Can you help me with a coding problem?
					</div>
					<div class="chat-image avatar">
						<div class="w-10 h-10 rounded-full bg-secondary">
							<span class="text-secondary-content font-semibold">U</span>
						</div>
					</div>
				</div>

				<!-- AI Response Example -->
				<div class="chat chat-start">
					<div class="chat-image avatar">
						<div class="w-10 h-10 rounded-full bg-primary">
							<span class="text-primary-content font-semibold">AI</span>
						</div>
					</div>
					<div class="chat-header text-sm opacity-70 mb-1">
						AI Assistant
						<time class="text-xs opacity-50 ml-2">Just now</time>
					</div>
					<div class="chat-bubble chat-bubble-primary">
						Of course! I'd be happy to help you with your coding problem. What language are you working with and what specific issue are you facing?
					</div>
				</div>

				<!-- User Message Example 2 -->
				<div class="chat chat-end">
					<div class="chat-header text-sm opacity-70 mb-1">
						<time class="text-xs opacity-50 mr-2">Just now</time>
						You
					</div>
					<div class="chat-bubble chat-bubble-neutral">
						I'm working on a Go project and I'm having trouble with error handling in my HTTP handlers.
					</div>
					<div class="chat-image avatar">
						<div class="w-10 h-10 rounded-full bg-secondary">
							<span class="text-secondary-content font-semibold">U</span>
						</div>
					</div>
				</div>

				<!-- AI Response Example 2 -->
				<div class="chat chat-start">
					<div class="chat-image avatar">
						<div class="w-10 h-10 rounded-full bg-primary">
							<span class="text-primary-content font-semibold">AI</span>
						</div>
					</div>
					<div class="chat-header text-sm opacity-70 mb-1">
						AI Assistant
						<time class="text-xs opacity-50 ml-2">Just now</time>
					</div>
					<div class="chat-bubble chat-bubble-primary">
						Great! Go has excellent error handling patterns. Could you share the specific code you're working with? I can help you implement proper error handling using techniques like:
						<br/><br/>
						• Custom error types<br/>
						• Error wrapping with `fmt.Errorf`<br/>
						• Proper HTTP status codes<br/>
						• Structured error responses
					</div>
				</div>
			</div>

			<!-- Input Area - Fixed at Bottom -->
			<div class="bg-base-100 border-t border-base-300 p-4">
				<form class="flex gap-3" onsubmit="event.preventDefault(); /* handle submit here */">
					<div class="flex-1 relative">
						<textarea
							class="textarea textarea-bordered w-full resize-none pr-12"
							placeholder="Type your message here..."
							rows="1"
							autocomplete="off"
							required
							oninput="this.style.height = 'auto'; this.style.height = this.scrollHeight + 'px';"
						></textarea>
						<button type="button" class="btn btn-ghost btn-sm absolute right-2 top-2">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13"></path>
							</svg>
						</button>
					</div>
					<button type="submit" class="btn btn-primary">
						<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
						</svg>
					</button>
				</form>
			</div>
		</div>
	}
}
