package views

import (
	"encoding/json"

	"github.com/nkapatos/mindweaver/internal/store"
	"github.com/nkapatos/mindweaver/internal/templates/components"
	"github.com/nkapatos/mindweaver/internal/templates/elements"
	"github.com/nkapatos/mindweaver/internal/templates/layouts"
)

// ConversationMetadata represents the metadata structure for conversations
type ConversationMetadata struct {
	DefaultProviderID   int64  `json:"default_provider_id"`
	DefaultProviderName string `json:"default_provider_name"`
	ConversationType    string `json:"conversation_type,omitempty"`
}

// getDefaultProviderFromMetadata extracts provider info from conversation metadata
func getDefaultProviderFromMetadata(conversation *store.Conversation) *store.Provider {
	if conversation == nil || !conversation.Metadata.Valid {
		return nil
	}

	var metadata ConversationMetadata
	if err := json.Unmarshal([]byte(conversation.Metadata.String), &metadata); err != nil {
		return nil
	}

	// Create a provider struct from metadata
	return &store.Provider{
		ID:   metadata.DefaultProviderID,
		Name: metadata.DefaultProviderName,
	}
}

templ Conversation(providerDropdownData components.ProviderDropdownData, messageInputData components.MessageInputData) {
	@layouts.AppLayout("Conversation", "Chat with your AI assistant") {
		<div class="flex flex-col bg-base-200">
			<!-- Smart Chat Header - Fixed height -->
			<div class="bg-base-100 border-b border-base-300 px-6 py-4 flex-shrink-0">
				<div class="flex items-center justify-between">
					<div class="flex items-center gap-4 flex-1">
						<!-- Provider Selection Dropdown -->
						@components.ProviderDropdown(providerDropdownData)
						<!-- Conversation Title/Info -->
						<div class="flex-1 min-w-0">
							if providerDropdownData.SelectedProvider != nil {
								<h1 class="text-lg font-semibold text-base-content">New Conversation</h1>
								<p class="text-sm text-base-content/60">Using { providerDropdownData.SelectedProvider.Name } - Ready to chat</p>
							} else {
								<h1 class="text-lg font-semibold text-base-content">New Conversation</h1>
								<p class="text-sm text-base-content/60">Choose a provider to start chatting</p>
							}
						</div>
					</div>
					<!-- Action Buttons -->
					<div class="flex items-center gap-2">
						<button class="btn btn-ghost btn-sm" title="More options">
							@elements.Icon("ellipsis-vertical")
						</button>
					</div>
				</div>
			</div>
			<!-- Messages Area -->
			<div class="flex-1 overflow-y-auto p-6" id="messages-container">
				if providerDropdownData.SelectedProvider != nil {
					<!-- Ready to chat state -->
					<div class="text-center text-base-content/60 py-12">
						<div class="max-w-md mx-auto">
							<div class="w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4">
								@elements.Icon("message-circle")
							</div>
							<h3 class="text-lg font-semibold mb-2">Ready to Chat!</h3>
							<p class="text-sm mb-6">You're using <strong>{ providerDropdownData.SelectedProvider.Name }</strong>. Type your message below to start the conversation.</p>
							<div class="space-y-2 text-xs text-base-content/50">
								<p>ðŸ’¡ You can switch providers anytime using the dropdown</p>
								<p>ðŸ’¡ Use @ mentions to switch providers mid-conversation</p>
							</div>
						</div>
					</div>
				} else {
					<!-- Welcome/Empty State -->
					<div class="text-center text-base-content/60 py-12">
						<div class="max-w-md mx-auto">
							<div class="w-16 h-16 bg-base-300 rounded-full flex items-center justify-center mx-auto mb-4">
								@elements.Icon("message-circle")
							</div>
							<h3 class="text-lg font-semibold mb-2">Start a New Conversation</h3>
							<p class="text-sm mb-6">Select a provider from the dropdown above to begin chatting with your AI assistant.</p>
							<div class="space-y-2 text-xs text-base-content/50">
								<p>ðŸ’¡ You can switch providers mid-conversation using @ mentions</p>
								<p>ðŸ’¡ Each provider has different capabilities and costs</p>
							</div>
						</div>
					</div>
				}
			</div>
			<!-- Input Area - Fixed height -->
			@components.MessageInput(messageInputData)
		</div>
	}
}

templ NewConversationPage(providers []store.Provider, activePath string) {
	@Conversation(components.ProviderDropdownData{
		Providers:        providers,
		SelectedProvider: nil,
		DropdownID:       "new-conversation-provider-dropdown",
	}, components.MessageInputData{
		Placeholder: "Type your message here...",
		IsDisabled:  true,
	})
}
