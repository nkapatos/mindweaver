// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.898
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/nkapatos/mindweaver/config"
import "github.com/nkapatos/mindweaver/internal/templates/elements"

func Sidebar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"drawer-side\"><label for=\"main-drawer\" aria-label=\"close sidebar\" class=\"drawer-overlay\"></label><aside class=\"min-h-full bg-base-100 border-r border-base-300 transition-all duration-300\" id=\"sidebar\"><div class=\"p-4\"><!-- Toggle button --><div class=\"flex justify-end mb-4\"><button id=\"sidebar-toggle\" class=\"btn btn-sm btn-ghost btn-square\" onclick=\"toggleSidebar()\" title=\"Toggle compact mode\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = elements.Icon(config.GetSvgIconPath(config.IconLeftArrow)).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</button></div><h2 class=\"text-xl font-bold mb-4 sidebar-title\">Navigation</h2>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = NavigationMenu().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div></aside></div><style>\n\t\t#sidebar {\n\t\t\twidth: 20rem; /* w-80 equivalent */\n\t\t}\n\n\t\t#sidebar.compact {\n\t\t\twidth: 4rem; /* w-16 equivalent */\n\t\t}\n\n\t\t#sidebar.compact .sidebar-title {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t#sidebar.compact .nav-text {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t#sidebar.compact li a {\n\t\t\tjustify-content: center;\n\t\t\tpadding: 0.75rem;\n\t\t}\n\n\t\t#sidebar.compact li a svg {\n\t\t\tmargin: 0;\n\t\t}\n\n\t\t#sidebar.compact #sidebar-toggle svg {\n\t\t\ttransform: rotate(180deg);\n\t\t}\n\t</style><script>\n\t\tfunction toggleSidebar() {\n\t\t\tconst sidebar = document.getElementById('sidebar');\n\t\t\tsidebar.classList.toggle('compact');\n\n\t\t\t// Save state\n\t\t\tlocalStorage.setItem('sidebar-compact', sidebar.classList.contains('compact'));\n\t\t}\n\n\t\t// Restore state on load\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\tconst isCompact = localStorage.getItem('sidebar-compact') === 'true';\n\t\t\tif (isCompact) {\n\t\t\t\tdocument.getElementById('sidebar').classList.add('compact');\n\t\t\t}\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
